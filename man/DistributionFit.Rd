% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DistributionFit.R
\name{DistributionFit}
\alias{DistributionFit}
\title{General distribution fitting algorithms}
\description{
General distribution fitting algorithms

General distribution fitting algorithms
}
\section{Super class}{
\code{\link[ukcovidtools:PassthroughFilesystemCache]{ukcovidtools::PassthroughFilesystemCache}} -> \code{DistributionFit}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DistributionFit$new()}}
\item \href{#method-setModels}{\code{DistributionFit$setModels()}}
\item \href{#method-fromUncensoredData}{\code{DistributionFit$fromUncensoredData()}}
\item \href{#method-fromCensoredData}{\code{DistributionFit$fromCensoredData()}}
\item \href{#method-withSingleDistribution}{\code{DistributionFit$withSingleDistribution()}}
\item \href{#method-fromBootstrappedDistributions}{\code{DistributionFit$fromBootstrappedDistributions()}}
\item \href{#method-fromBootstrappedData}{\code{DistributionFit$fromBootstrappedData()}}
\item \href{#method-fromBootstrappedCensoredData}{\code{DistributionFit$fromBootstrappedCensoredData()}}
\item \href{#method-plot}{\code{DistributionFit$plot()}}
\item \href{#method-extractFitted}{\code{DistributionFit$extractFitted()}}
\item \href{#method-filterModels}{\code{DistributionFit$filterModels()}}
\item \href{#method-generateSamples}{\code{DistributionFit$generateSamples()}}
\item \href{#method-calculateDensities}{\code{DistributionFit$calculateDensities()}}
\item \href{#method-calculateCumulativeDistributions}{\code{DistributionFit$calculateCumulativeDistributions()}}
\item \href{#method-calculateQuantiles}{\code{DistributionFit$calculateQuantiles()}}
\item \href{#method-discreteProbabilities}{\code{DistributionFit$discreteProbabilities()}}
\item \href{#method-discreteSurvival}{\code{DistributionFit$discreteSurvival()}}
\item \href{#method-sampledProbabilities}{\code{DistributionFit$sampledProbabilities()}}
\item \href{#method-sevenNumbers}{\code{DistributionFit$sevenNumbers()}}
\item \href{#method-printDistributionSummary}{\code{DistributionFit$printDistributionSummary()}}
\item \href{#method-printDistributionDetail}{\code{DistributionFit$printDistributionDetail()}}
\item \href{#method-tsParameterizedConvolution}{\code{DistributionFit$tsParameterizedConvolution()}}
\item \href{#method-tsDiscreteConvolution}{\code{DistributionFit$tsDiscreteConvolution()}}
\item \href{#method-tsBootstrapConvolution}{\code{DistributionFit$tsBootstrapConvolution()}}
\item \href{#method-summariseBootstrap}{\code{DistributionFit$summariseBootstrap()}}
\item \href{#method-clone}{\code{DistributionFit$clone()}}
}
}
\if{html}{
\out{<details open ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getDaily">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getDaily}{\code{ukcovidtools::PassthroughFilesystemCache$getDaily()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getHashCached">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getHashCached}{\code{ukcovidtools::PassthroughFilesystemCache$getHashCached()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="getSaved">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-getSaved}{\code{ukcovidtools::PassthroughFilesystemCache$getSaved()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="ukcovidtools" data-topic="PassthroughFilesystemCache" data-id="unloadCache">}\href{../../ukcovidtools/html/PassthroughFilesystemCache.html#method-unloadCache}{\code{ukcovidtools::PassthroughFilesystemCache$unloadCache()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
New distribution fitter
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$new(
  distributions = c("weibull", "gamma", "lnorm", "exp", "norm", "tnorm"),
  shifted = 0,
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{distributions}}{- the distributions to fit}

\item{\code{shifted}}{- a shift to apply to all data}

\item{\code{...}}{for compatibility}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{

}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-setModels"></a>}}
\if{latex}{\out{\hypertarget{method-setModels}{}}}
\subsection{Method \code{setModels()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$setModels(
  distributions = c("weibull", "gamma", "lnorm", "exp", "norm", "tnorm"),
  shifted = 0
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromUncensoredData"></a>}}
\if{latex}{\out{\hypertarget{method-fromUncensoredData}{}}}
\subsection{Method \code{fromUncensoredData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$fromUncensoredData(
  groupedDf,
  valueExpr = value,
  truncate = TRUE,
  bootstraps = 100,
  seed = 101,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromCensoredData"></a>}}
\if{latex}{\out{\hypertarget{method-fromCensoredData}{}}}
\subsection{Method \code{fromCensoredData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$fromCensoredData(
  groupedDf,
  lowerValueExpr,
  upperValueExpr,
  truncate = TRUE,
  bootstraps = 100,
  seed = 101,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-withSingleDistribution"></a>}}
\if{latex}{\out{\hypertarget{method-withSingleDistribution}{}}}
\subsection{Method \code{withSingleDistribution()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$withSingleDistribution(
  dist,
  paramDf,
  bootstraps = 1000,
  epiestimMode = FALSE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromBootstrappedDistributions"></a>}}
\if{latex}{\out{\hypertarget{method-fromBootstrappedDistributions}{}}}
\subsection{Method \code{fromBootstrappedDistributions()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$fromBootstrappedDistributions(
  fittedDistributions,
  confint = c(0.025, 0.975),
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromBootstrappedData"></a>}}
\if{latex}{\out{\hypertarget{method-fromBootstrappedData}{}}}
\subsection{Method \code{fromBootstrappedData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$fromBootstrappedData(
  bootstrappedDf,
  valueExpr = value,
  truncate = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fromBootstrappedCensoredData"></a>}}
\if{latex}{\out{\hypertarget{method-fromBootstrappedCensoredData}{}}}
\subsection{Method \code{fromBootstrappedCensoredData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$fromBootstrappedCensoredData(
  bootstrappedDf,
  lowerValueExpr = left,
  upperValueExpr = right,
  truncate = TRUE,
  ...
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-plot"></a>}}
\if{latex}{\out{\hypertarget{method-plot}{}}}
\subsection{Method \code{plot()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$plot(
  xlim,
  binwidth = 1,
  summary = FALSE,
  pts = 8,
  facet2d = TRUE
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-extractFitted"></a>}}
\if{latex}{\out{\hypertarget{method-extractFitted}{}}}
\subsection{Method \code{extractFitted()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$extractFitted(
  distFit,
  isCensored,
  bootstraps = 100,
  seed = 101
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filterModels"></a>}}
\if{latex}{\out{\hypertarget{method-filterModels}{}}}
\subsection{Method \code{filterModels()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$filterModels(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-generateSamples"></a>}}
\if{latex}{\out{\hypertarget{method-generateSamples}{}}}
\subsection{Method \code{generateSamples()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$generateSamples(sampleExpr = 1000, seed = 101)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-calculateDensities"></a>}}
\if{latex}{\out{\hypertarget{method-calculateDensities}{}}}
\subsection{Method \code{calculateDensities()}}{
calculates a set of pdfs from bootstrapped distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$calculateDensities(x, summarise = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{support}}{- the range of values of X for which to calculate the density.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list of randomly selected bootstraps from the fitted models.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-calculateCumulativeDistributions"></a>}}
\if{latex}{\out{\hypertarget{method-calculateCumulativeDistributions}{}}}
\subsection{Method \code{calculateCumulativeDistributions()}}{
calculates a set of pdfs from bootstrapped distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$calculateCumulativeDistributions(q, summarise = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{support}}{- the range of values of X for which to calculate the density.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list of randomly selected bootstraps from the fitted models.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-calculateQuantiles"></a>}}
\if{latex}{\out{\hypertarget{method-calculateQuantiles}{}}}
\subsection{Method \code{calculateQuantiles()}}{
calculates a set of quantiles from bootstrapped distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$calculateQuantiles(p, summarise = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{support}}{- the range of values of X for which to calculate the density.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list of randomly selected bootstraps from the fitted models.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-discreteProbabilities"></a>}}
\if{latex}{\out{\hypertarget{method-discreteProbabilities}{}}}
\subsection{Method \code{discreteProbabilities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$discreteProbabilities(q, summarise = TRUE, truncate = FALSE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-discreteSurvival"></a>}}
\if{latex}{\out{\hypertarget{method-discreteSurvival}{}}}
\subsection{Method \code{discreteSurvival()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$discreteSurvival(q, summarise = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sampledProbabilities"></a>}}
\if{latex}{\out{\hypertarget{method-sampledProbabilities}{}}}
\subsection{Method \code{sampledProbabilities()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$sampledProbabilities(q, summarise = TRUE)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-sevenNumbers"></a>}}
\if{latex}{\out{\hypertarget{method-sevenNumbers}{}}}
\subsection{Method \code{sevenNumbers()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$sevenNumbers(groupedDf, colVar)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printDistributionSummary"></a>}}
\if{latex}{\out{\hypertarget{method-printDistributionSummary}{}}}
\subsection{Method \code{printDistributionSummary()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$printDistributionSummary(confint = c(0.025, 0.975))}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-printDistributionDetail"></a>}}
\if{latex}{\out{\hypertarget{method-printDistributionDetail}{}}}
\subsection{Method \code{printDistributionDetail()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$printDistributionDetail(confint = c(0.025, 0.975))}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tsParameterizedConvolution"></a>}}
\if{latex}{\out{\hypertarget{method-tsParameterizedConvolution}{}}}
\subsection{Method \code{tsParameterizedConvolution()}}{
applies a set of parameterised convolution functions groupwise to input data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$tsParameterizedConvolution(
  groupedDf,
  distributionsDf,
  outputVar = "output",
  valueVar = "value",
  dateVar = "date",
  distributionVar = "dist",
  paramNameVar = "param",
  paramValueVar = "paramValue",
  days = 30,
  timepoints = 0:days,
  padLeft = NA_real_,
  padRight = NA_real_
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groupedDf}}{- an optionally grouped dataframe, containing at dateVar, and a valueVar to be colvolved}

\item{\code{distributionsDf}}{- a dataframe containing the same grouping columns as groupedDf plus "distribution", and relevant distribution parameter columns}

\item{\code{dateVar}}{-}

\item{\code{days}}{-}

\item{\code{timepoints}}{- the times to}

\item{\code{padLeft}}{- what can we assume about the run in to the current values? default NA.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list of matrices
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tsDiscreteConvolution"></a>}}
\if{latex}{\out{\hypertarget{method-tsDiscreteConvolution}{}}}
\subsection{Method \code{tsDiscreteConvolution()}}{
applies a set of parameterised convolution functions groupwise to input data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$tsDiscreteConvolution(
  groupedDf,
  discreteDistDf,
  outputVar = "output",
  valueVar = "value",
  dateVar = "date",
  pExpr = "prob",
  padLeft = NA_real_,
  padRight = NA_real_
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{groupedDf}}{- an optionally grouped dataframe, containing at dateVar, and a valueVar to be colvolved}

\item{\code{discreteDistDf}}{- a dataframe containing the same grouping columns as groupedDf plus "start", "end" and "prob" columns}

\item{\code{dateVar}}{-}

\item{\code{padLeft}}{- what can we assume about the run in to the current values? default NA.}

\item{\code{padRight}}{- what can we assume about the run in to the current values? default NA.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
a list of matrices
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tsBootstrapConvolution"></a>}}
\if{latex}{\out{\hypertarget{method-tsBootstrapConvolution}{}}}
\subsection{Method \code{tsBootstrapConvolution()}}{
executes a convolution using bootstrapped parameterized distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$tsBootstrapConvolution(
  groupedDf,
  distributionDistDf,
  bootstraps = 100,
  outputVar = "output",
  valueVar = "value",
  dateVar = "date",
  days = 30,
  timepoints = 0:days,
  padLeft = NA_real_,
  padRight = NA_real_
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{distributionDistDf}}{- a grouped data frame containing the same columns as those grouped in groupedDf, plus "distribution" and  columns for "<parameter>_mean","<parameter>_sd","<parameter>_min","<parameter>_max" e.g. shape_mean, shape_sd, shape_min, shape_max, rate_mean, rate_sd, rate_min, rate_max}

\item{\code{bootstraps}}{- number of bootstrap iterations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the full bootstrap result (i.e. not summarized) which can be futher convoluted (asd long as the number of bootstrap iterations are kept the same).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-summariseBootstrap"></a>}}
\if{latex}{\out{\hypertarget{method-summariseBootstrap}{}}}
\subsection{Method \code{summariseBootstrap()}}{
summarise the result of a bootstrapped convolution using parameterized distributions
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$summariseBootstrap(
  groupedDf,
  outputVars = vars(output),
  dateVar = "date"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{distributionDistDf}}{- a grouped data frame containing the same columns as those grouped in groupedDf, plus "distribution" and  columns for "<parameter>_mean","<parameter>_sd","<parameter>_min","<parameter>_max" e.g. shape_mean, shape_sd, shape_min, shape_max, rate_mean, rate_sd, rate_min, rate_max}

\item{\code{bootstraps}}{- number of bootstrap iterations}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
the full bootstrap result (i.e. not summarized) which can be futher convoluted (asd long as the number of bootstrap iterations are kept the same).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DistributionFit$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
